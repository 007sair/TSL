/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$icon-my-gray-name: 'icon-my-gray';
$icon-my-gray-x: 0rem;
$icon-my-gray-y: 0rem;
$icon-my-gray-offset-x: 0rem;
$icon-my-gray-offset-y: 0rem;
$icon-my-gray-width: 0.67rem;
$icon-my-gray-height: 0.67rem;
$icon-my-gray-total-width: 1.6rem;
$icon-my-gray-total-height: 0.67rem;
$icon-my-gray-image: '../images/icon-sprite.png';
$icon-my-gray: (0rem, 0rem, 0rem, 0rem, 0.67rem, 0.67rem, 1.6rem, 0.67rem, '../images/icon-sprite.png', 'icon-my-gray', );
$icon-my-name: 'icon-my';
$icon-my-x: 0.93rem;
$icon-my-y: 0rem;
$icon-my-offset-x: -0.93333rem;
$icon-my-offset-y: 0rem;
$icon-my-width: 0.67rem;
$icon-my-height: 0.67rem;
$icon-my-total-width: 1.6rem;
$icon-my-total-height: 0.67rem;
$icon-my-image: '../images/icon-sprite.png';
$icon-my: (0.93rem, 0rem, -0.93333rem, 0rem, 0.67rem, 0.67rem, 1.6rem, 0.67rem, '../images/icon-sprite.png', 'icon-my', );
$spritesheet-width: 1.6rem;
$spritesheet-height: 0.67rem;
$spritesheet-image: '../images/icon-sprite.png';
$spritesheet-sprites: ($icon-my-gray, $icon-my, );
$spritesheet: (1.6rem, 0.67rem, '../images/icon-sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);

  /** 
   * 将position换成百分比的写法，参考自：https://github.com/banricho/webLog/issues/1
   */
  
  $offset_x: nth($sprite, 3);
  $offset_y: nth($sprite, 4);
  $width: nth($sprite, 5);
  $height: nth($sprite, 6);
  $total_width: nth($sprite, 7);
  $total_height: nth($sprite, 8);

  //分母为0时让其为1rem，解决除法分母为0时报错的bug
  $x_fm: if( (($width - $total_width) == 0) , 1rem, ($width - $total_width));
  $y_fm: if( (($height - $total_height) == 0) , 1rem, ($height - $total_height));

  background-position: percentage($offset_x / $x_fm) percentage($offset_y / $y_fm);

  /**
   * 这是rem的position
   */
  //background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
  background-size: 1.6rem 0.67rem;
}

@mixin sprite($sprite) {
  //@include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}


/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

在sass文件中的调用方法：
@include sprites($spritesheet-sprites, $url);

参数$url使用方法：
  1. 不填时默认使用插件生成的地址
  2. 如何填入？举例说明：
        $online: true; //需要根据变量切换线上与线下图片链接
        $sprite-icons: '../images/icon-sprite.png'; //默认线下
        @if $online {
          $sprite-icons: 'http://xxx.xxx.icon-sprite.png'; //此处放线上链接
        } 
        @include sprites($spritesheet-sprites, $sprite-icons); //此处调用，传入第二个参数
*/

@mixin sprites($sprites, $url: '../images/icon-sprite.png') {
  %sprite-common {
    background-image: url($url);
    background-size: 1.6rem 0.67rem;
  }
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @extend %sprite-common;
      @include sprite($sprite);
    }
  }
}
